@model RecMan.Models.Resource

@{
    ViewBag.Title = "Details";
    ViewBag.ThisResource = "thisResource";
}

<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        //LIKE
        $(document).on("click", "a.like", function () {
            var id = $(this).data("id");
            var link = "/Resource/LikeThis/" + id;
            //Choose all a tags with this class and this ID
            var a = $("a[class$='like'][data-id$='"+id+"']");
            $.ajax({
                type: "GET",
                url: link,
                success: function (result) {
                    a.html('<i class="fa fa-heart fa-lg text-danger"></i> <span>(' + result + ')</span>').removeClass("like").addClass("unlike");
                }
            });
        });
        /*//UNLIKE
        $("a.unlike").click(function () {
            var id = $(this).data("id");
            var link = "/Resource/UnlikeThis/" + id;
            var a = $(this);
            $.ajax({
                type: "GET",
                url: link,
                success: function (result) {
                    a.html('<i class="fa fa-heart fa-lg text-danger"></i> (' + result + ')');
                }
            });*/
        });

    });
</script></head>

</head>


<body>
    <h2>Details</h2>

    <div>
        <h4>Resource</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Title)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Title)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Source)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Source)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Level)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Level)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Focus)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Focus)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Topic)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Topic)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Content)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Content)
            </dd>

            @Html.ActionLink("Like", "Details", null, new { id = "like" })

            <dt>
                @Html.DisplayNameFor(model => model.LikeCount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LikeCount)
            </dd>





            @if (Model.Files.Any(f => f.ContentType == "image/jpeg"))
            {
                <dt>
                    Avatar
                </dt>
                <dd>
                    <img src="~/File?id=@Model.Files.First(f => f.FileType == FileType.Avatar).FileId" alt="avatar" />
                </dd>

            }

            @if (Model.Files.Any(f => f.ContentType == "application/pdf"))
            {
                var getData = ViewData["PDF"];

                <object data="data:application/pdf;base64,@System.Convert.ToBase64String((Byte[])ViewData["PDF"])" type="application/pdf" width="500">
                    <embed src="data:application/pdf;base64, @System.Convert.ToBase64String((Byte[])ViewData["PDF"])" type="application/pdf" />
                </object>
            }

            <li>
                @{
                int userid = Convert.ToInt32(Session["ID"]);

                if (!User.Identity.IsAuthenticated)
                {
                    <i class="fa fa-heart-o fa-lg"></i><span>(@Model.Likes)</span>
                }
         
            }
        </li>





            <dt>
                @Html.DisplayNameFor(model => model.Comments)
            </dt>

            @foreach (var item in Model.Comments)
            {
                <div>@item.UserName</div>
                <div>@item.Message</div>
                <p>posted</p>
                <div>@item.DateTime</div>
                <p>edited</p>
                <div>@item.DateTimeEdit</div>
                @Html.ActionLink("Edit", "../Comments/Edit", new { id = item.ID, ResId = Model.ResourceID });
                @Html.ActionLink("Delete", "../Comments/Delete", new { id = item.ID, ResId = Model.ResourceID })
            }


            @Html.ActionLink("Post a Comment", "../Comments/Create", new { id = Model.ResourceID }) |
            @Html.ActionLink("Edit", "Edit", new { id = Model.ResourceID }) |
            @Html.ActionLink("Back to List", "Index")


            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
            </body>

