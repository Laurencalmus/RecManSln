@model RecMan.Models.Resource

@{
    ViewBag.Title = "Details";
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/Content/Site.css" rel="stylesheet" />
   
   
</head>


<body>
        <table class="table-title">
            <tr>
                <td>
                    <h1>@Html.DisplayFor(model => model.Title)</h1>
                    <p>by @Html.DisplayFor(model => model.UserName)</p>
                </td>
            </tr>
            <tr>
                <td>
                    @if (@ViewBag.UserrName == "Lauren")
                    {
                        @Html.ActionLink("Edit this resource", "Edit", new { id = Model.ResourceID })
                    }
                </td>
                    </tr>
                <!--<input id="idLabel" value="@Model.ResourceID" >
        <button id="Like">Like</button>
        <a>@Html.ActionLink("Like", "Details", new { id = Model.ResourceID }) </a>-->
            </tr>
            
            <script>
            // You're probably clicking something to initiate update
            var $Like = $('#Like');

            // .live persists on the page even after other ajax calls
            // So when the thing is clicked
            $Like.live('click', function() {

               // Grab the information needed to update
               var id = $('#idLabel').val(); //Or it could be .text()

               // Let's edit the description!
               $.ajax({
                 type: "POST",
                 url: "Resources/Details", // the method we are calling
                 contentType: "application/json; charset=utf-8",
                 data: { 'id': id },
                 dataType: "json",
                 success: function (result) {
                     alert('Yay! It worked!');
                     // Or if you are returning something
                     //alert('I returned... ' + result.WhateverIsReturning);
                 },
                 error: function (result) {
                     alert('Oh no :(');
                 }
               });
            });
            </script>

        </table>
    <div class="ResourceHeader">
        <table class="table">
            <tr class="blue">
                <th>@Html.DisplayNameFor(model => model.Source)</th>
                <th>@Html.DisplayNameFor(model => model.Level)</th>
                <th>@Html.DisplayNameFor(model => model.Focus)</th>
                <th>@Html.DisplayNameFor(model => model.Topic)</th>
                <th>@Html.DisplayNameFor(model => model.LikeCount)</th>
            </tr>

            <tr>
                <td>@Html.DisplayFor(model => model.Source)</td>
                <td>@Html.DisplayFor(model => model.Level)</td>
                <td>@Html.DisplayFor(model => model.Focus)</td>
                <td>@Html.DisplayFor(model => model.Topic)</td>
                <!--<td>@Html.DisplayFor(model => model.LikeCount)</td>-->
            </tr>
        </table>
    </div><!--ResourceHeader-->

    <div class="content">
        <table class="table">
            <tr>
                <td id="main">@Html.DisplayFor(model => model.Content)</td>
            </tr>

            @if (Model.Files.Any(f => f.ContentType == "image/jpeg"))
            {
                <dt>
                    Avatar
                </dt>
                <dd>
                    <img src="~/File?id=@Model.Files.First(f => f.FileType == FileType.Avatar).FileId" alt="avatar" />
                </dd>

            }

            @if (Model.Files.Any(f => f.ContentType == "application/pdf"))
            {
                var getData = ViewData["PDF"];

                <object data="data:application/pdf;base64,@System.Convert.ToBase64String((Byte[])ViewData["PDF"])" type="application/pdf" width="500">
                    <embed src="data:application/pdf;base64, @System.Convert.ToBase64String((Byte[])ViewData["PDF"])" type="application/pdf" />
                </object>
            }
        </table>
        </div>


        <table class="table">
            <tr>
                <h3>Comments</h3>
                @Html.ActionLink("Post a Comment", "../Comments/Create", new { id = Model.ResourceID })
            </tr>
            @foreach (var c in Model.Comments.OrderByDescending(c => c.DateTime))
            {
                <tr>
                    <td>@c.UserName</td>
                    <td>@c.Message</td>
                    <td>
                        @if (@c.DateTimeEdit != null)
                        {<p>edited</p>@c.DateTimeEdit}
                        <p>posted</p>@c.DateTime
                    </td>
                    <td>
                        @if (@c.UserId == @ViewBag.Userr)
                        { @Html.ActionLink("Edit", "../Comments/Edit", new { id = c.ID, ResId = Model.ResourceID })}
                    </td>
                    <td>
                        @if (@c.UserId == @ViewBag.userr)
                        { @Html.ActionLink("Delete", "../Comments/Delete", new { id = c.ID, ResId = Model.ResourceID })}
                    </td>
                </tr>
            }
        </table>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
</body>



